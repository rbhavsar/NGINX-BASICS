
#user  nobody;
worker_processes  auto;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        listen       8080; # To listen on 8080
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        root   html/sites/demo;
        # location / {
        #     root   html/sites/demo;
        #     index  index.html index.htm;
        # }
        #
        # #error_page  404              /404.html;
        #
        # # redirect server error pages to the static page /50x.html
        # #
        # error_page   500 502 503 504  /50x.html;
        # location = /50x.html {
        #     root   html;
        # }

        set $weekend 'No';

        # #Check api key
        # if ( $arg_apikey != 1234 ){
        #   return 401 "Incorrect key.";
        # }


        rewrite ^/user/\w+ /greeting;

        location /greeting {
          return 200 'Hello users';
        }

        #Prefix match --> http://127.0.0.1:8080/greet OR http://127.0.0.1:8080/greeting
        location /greet {
          return 200 '$host\n$uri';
        }
        location /logo {
          return 307 /thumb.png;
        }

        location = /thumb.png {

          add_header my_header "Hello";
          add_header Cache-Control public;
          expires 1M;
        }

        location /google {
          add_header proxied nginx;
          proxy_set_header proxysetheader servernginx;
          proxy_pass 'https://www.google.com/';
        }


        #
        # #exact match
        # location = /greet {
        #   return 200 'Hello world exact match';
        # }
        #
        # #Regex match - http://127.0.0.1:8080/greet2 ( case sensitive )
        # location ~ /greet[0-9] {
        #   return 200 'Hello world regex match';
        # }

        # #Prefential prefix - http://127.0.0.1:8080/Greet2
        # location ^~ /Greet2 {
        #   return 200 'Hello world regex match';
        # }

        # location /inspect {
        #   return 200 "$host\n$url\n$args";
        # }


        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}
    include servers/*;
}
